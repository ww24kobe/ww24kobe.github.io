(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{219:function(t,s,a){"use strict";a.r(s);var n=a(28),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"深入理解css选择器优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深入理解css选择器优先级"}},[t._v("#")]),t._v(" 深入理解CSS选择器优先级")]),t._v(" "),a("h2",{attrs:{id:"什么是选择器优先级（specificity）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是选择器优先级（specificity）"}},[t._v("#")]),t._v(" 什么是选择器优先级（Specificity）")]),t._v(" "),a("p",[t._v("直接复制了 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Specificity",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN对优先级的定义"),a("OutboundLink")],1),t._v(" ：")]),t._v(" "),a("blockquote",[a("p",[t._v("浏览器通过优先级来判断哪一些属性值与一个元素最为相关，从而在该元素上应用这些属性值。优先级是基于不同种类选择器组成的匹配规则。")])]),t._v(" "),a("p",[t._v("这句话也是很抽象，暂且先不管它了。但是我们可以先看一个例子：")]),t._v(" "),a("ul",[a("li",[t._v("html")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n我是什么颜色\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("ul",[a("li",[t._v("css")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#content")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #f00"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".content")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #0f0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("那最后文字是什么颜色呢？答案很简单：红色。这就涉及到了优先级问题，同一块内容，我们同时用了 "),a("code",[t._v("ID选择器")]),t._v(" 和 "),a("code",[t._v("类选择器")]),t._v(",因为 "),a("code",[t._v("ID选择器")]),t._v(" 优先级大于 "),a("code",[t._v("类选择器")]),t._v(" , 所以最终显示为红色。")]),t._v(" "),a("h2",{attrs:{id:"优先级的计算规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优先级的计算规则"}},[t._v("#")]),t._v(" 优先级的计算规则")]),t._v(" "),a("p",[t._v("相信每位写过CSS的朋友都知道，CSS选择器的优先级关系是:")]),t._v(" "),a("blockquote",[a("p",[t._v("内联 > ID选择器 > 类选择器 > 标签选择器。")])]),t._v(" "),a("p",[t._v("但是，浏览器具体的优先级算法是怎样的？可能还有些人不知道 。《CSS REFACTORING》 中提到了算法的过程 。\nA specificity is determined by plugging numbers into (a, b, c, d):")]),t._v(" "),a("p",[t._v("If the styles are applied via the style attribute, a=1; otherwise, a=0.\nb is equal to the number of ID selectors present.\nc is equal to the number of class selectors, attribute selectors, and pseudoclasses present.\nd is equal to the number of type selectors and pseudoelements present.")]),t._v(" "),a("p",[t._v("翻译过来就是")]),t._v(" "),a("p",[t._v("优先级是由 A 、B、C、D 的值来决定的，其中它们的值计算规则如下：")]),t._v(" "),a("p",[t._v("如果存在内联样式，那么 A = 1, 否则 A = 0;\nB 的值等于 ID选择器 出现的次数;\nC 的值等于 类选择器 和 属性选择器 和 伪类 出现的总次数;\nD 的值等于 标签选择器 和 伪元素 出现的总次数 。")]),t._v(" "),a("p",[t._v("这样子直接看好像也还是很明白 ，那先上个例子：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("#nav-global > ul > li > a.nav-link\n")])])]),a("p",[t._v("套用上面的算法，依次求出 A B C D 的值：")]),t._v(" "),a("p",[t._v("因为没有内联样式 ，所以 A = 0;")]),t._v(" "),a("p",[t._v("ID选择器总共出现了1次， B = 1;")]),t._v(" "),a("p",[a("code",[t._v("类选择器")]),t._v("出现了1次， "),a("code",[t._v("属性选择器")]),t._v("出现了0次，伪类选择器出现0次，所以 C = (1 + 0 + 0) = 1；")]),t._v(" "),a("p",[a("code",[t._v("标签选择器")]),t._v("出现了3次， "),a("code",[t._v("伪元素选择器")]),t._v("出现了0次，所以 D = (3 + 0) = 3;")]),t._v(" "),a("p",[t._v("上面算出的A 、B、C、D 可以简记作：(0, 1, 1, 3)。")]),t._v(" "),a("p",[t._v("为了熟悉掌握优先级算法 ，我们再来做一些练习：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("li                                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* (0, 0, 0, 1) */")]),t._v("\nul li                               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* (0, 0, 0, 2) */")]),t._v("\nul ol+li                            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* (0, 0, 0, 3) */")]),t._v("\nul ol li.red                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* (0, 0, 1, 3) */")]),t._v("\nli.red.level                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* (0, 0, 2, 1) */")]),t._v("\n.a1.a2.a3.a4.a5.a6.a7.a8.a9.a10.a11  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* (0, 0, 11,0) */")]),t._v("\n#x34y                               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* (0, 1, 0, 0) */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("first-child h2 .title            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* (0, 0, 2, 2) */")]),t._v("\n#nav .selected > "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("hover            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* (0, 1, 2, 1) */")]),t._v("\nhtml body #nav .selected > "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("hover  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* (0, 1, 2, 3) */")]),t._v("\n\n")])])]),a("p",[t._v("OK， 现在已经弄清楚了优先级是怎么算的了。但是，还有一个问题，怎么比较两个优先级的高低呢？ 比较规则是: "),a("strong",[t._v("从左往右依次进行比较 ，较大者胜出，如果相等，则继续往右移动一位进行比较 。如果4位全部相等，则后面的会覆盖前面的")])]),t._v(" "),a("p",[t._v("再来看一下例子：")]),t._v(" "),a("ul",[a("li",[t._v("html")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("nav-list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("nav-list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("nav1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("nav2"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),a("ul",[a("li",[t._v("css")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#nav-list .item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #f00"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".nav-list .item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #0f0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("算出 #nav-list .item 的优先级是 (0, 1, 1, 0),  .nav-list .item 的优先级是 (0, 0, 2, 0)。 左边第一位都是0， 再看看左边第二位，前者是1，后者是0， 所以（0, 1, 1, 0） 的大于 (0, 0, 2, 0) ，即 #nva-list .item 大于 .nav-list .item，所以字体会是红色。")]),t._v(" "),a("h2",{attrs:{id:"优先级的特殊情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优先级的特殊情况"}},[t._v("#")]),t._v(" 优先级的特殊情况")]),t._v(" "),a("p",[t._v("经过上面的优先级计算规则，我们可以知道内联样式的优先级是最高的，但是外部样式有没有什么办法覆盖内联样式呢？有的，那就要 "),a("code",[t._v("!important")]),t._v(" 出马了。因为一般情况下，很少会使用内联样式 ，所以 "),a("code",[t._v("!important")]),t._v(" 也很少会用到！如果不是为了要覆盖内联样式，建议尽量不要使用 "),a("code",[t._v("!important")]),t._v(" 。\n那可能有人会想，那如果我内联样式用了 "),a("code",[t._v("!important")]),t._v("，是不是外部样式就没有办法了呢？比如下面的代码：")]),t._v(" "),a("ul",[a("li",[t._v("html")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#f00 "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("!important")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("666"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),a("ul",[a("li",[t._v("css")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".app")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #0f0 "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("!important")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("是的，你赢了，这时候内联样式已经强大到不管你外部样式怎么写都无法覆盖它了。这种情况在实际代码中是要杜绝的！记住，千万不要在内联样式中使用 "),a("code",[t._v("!important")]),t._v("\n最后 ， "),a("code",[t._v("!important")]),t._v(" 真的是的无法超越的王者吗？其实不是的，一些情况，我们可以超越 "),a("code",[t._v("!important")]),t._v(", 请看下面的例子：")]),t._v(" "),a("ul",[a("li",[t._v("html")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #f00"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 300px"),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("!important")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我的宽度是多少呢？？"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("ul",[a("li",[t._v("css")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这时候 .box 的宽度只有 100px , 而不是 300px, 可见，max-width 可以超越 width!important!但是，这实际上不是优先级的问题，因为优先级是比较相同属性的，而 max-width 和 width 是两个不同的属性。之所以举这个例子，是要告诉大家，有时候不管怎么设置容器的 "),a("code",[t._v("width")]),t._v(" 都不生效，检查一下是不是有人写了 "),a("code",[t._v("max-width")]),t._v(" 坑了你哈。")])])}),[],!1,null,null,null);s.default=e.exports}}]);