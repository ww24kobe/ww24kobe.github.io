(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{253:function(e,n,a){"use strict";a.r(n);var t=a(28),s=Object(t.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"npm命令基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm命令基本使用"}},[e._v("#")]),e._v(" NPM命令基本使用")]),e._v(" "),a("h2",{attrs:{id:"npm介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm介绍"}},[e._v("#")]),e._v(" NPM介绍")]),e._v(" "),a("p",[a("strong",[e._v("1. NPM 是什么")]),e._v("？")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("npm（全称Node Package Manager，即node包管理器）。")])]),e._v(" "),a("li",[a("p",[e._v("npm是Node.js默认的软件包管理器件。安装完毕node后，会默认安装npm")])]),e._v(" "),a("li",[a("p",[e._v("npm本身也是基于Node.js开发的包")])]),e._v(" "),a("li",[a("p",[e._v("查看当前npm版本："),a("code",[e._v("npm -v")])])]),e._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("npm 官方网站"),a("OutboundLink")],1),e._v("，这是NPM 包管理库，存储了大量的JavaScript代码库")])]),e._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://docs.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("npm 官方文档"),a("OutboundLink")],1),e._v("，可以查看npm命令的具体使用")])])]),e._v(" "),a("h2",{attrs:{id:"npm常用命令介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm常用命令介绍"}},[e._v("#")]),e._v(" NPM常用命令介绍")]),e._v(" "),a("p",[e._v("1、首先在项目根目录中先初始化项目描述文件"),a("code",[e._v("package.json")]),e._v(" ，记录项目所依赖的包。")]),e._v(" "),a("ul",[a("li",[e._v("可通过 "),a("code",[e._v("npm init")]),e._v(" 命令根据引导创建 package.json 文件。")]),e._v(" "),a("li",[e._v("或直接通过 "),a("code",[e._v("npm init -y")]),e._v(" 或 "),a("code",[e._v("npm init -yes")]),e._v("  命令直接创建一个包含默认信息的package.json文件")])]),e._v(" "),a("p",[e._v("2、npm下载模块")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("在 "),a("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.npmjs.com/"),a("OutboundLink")],1),e._v(" 网站找到需要的包，进行下载")])]),e._v(" "),a("li",[a("p",[e._v("npm install xxx ：下载xxx模块到当前命令行所在的node_modules目录中，此目录若不存在则会自动创建。且安装的模块会写入package.json中的dependencies生成环境（线上环境）依赖中。")])]),e._v(" "),a("li",[a("p",[e._v("npm install xxx –-save ：下载并写入package.json中的dependencies生产环境依赖中，其中"),a("code",[e._v("--save")]),e._v("可简写"),a("code",[e._v("-S")])])]),e._v(" "),a("li",[a("p",[e._v("npm install xxx –-save-dev：下载并写入package.json中的devDependencies开发环境依赖中，其中"),a("code",[e._v("--save-dev")]),e._v("可简写为"),a("code",[e._v("-D")])])]),e._v(" "),a("li",[a("p",[e._v("npm install --production : 仅安装dependencies生产环境指定的依赖，")])]),e._v(" "),a("li",[a("p",[e._v("npm install 安装package.json文件中dependencies和devDependencies指定的所有模块")])]),e._v(" "),a("li",[a("p",[e._v("在代码中通过 "),a("code",[e._v("require('包名'")]),e._v(")加载对应的包会自动从node_modules中加载该模块")])])]),e._v(" "),a("p",[e._v("3、 npm 删除模块")]),e._v(" "),a("p",[e._v("npm uninstall xxx：删除本地xxx模块；")]),e._v(" "),a("blockquote",[a("p",[e._v("可以输入npm install --help查看详细用法")])]),e._v(" "),a("h2",{attrs:{id:"package-json-文件中常见的选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#package-json-文件中常见的选项"}},[e._v("#")]),e._v(" package.json 文件中常见的选项")]),e._v(" "),a("p",[e._v("1、常见项目")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("name: 包的名称，由小写英文字母、数字和下划线组成，不能包含空格。")])]),e._v(" "),a("li",[a("p",[e._v("description：包的简要说明。")])]),e._v(" "),a("li",[a("p",[e._v("author：包的作者")])]),e._v(" "),a("li",[a("p",[e._v("version：符合语义化版本识别规范的版本")])]),e._v(" "),a("li",[a("p",[e._v("keywords：关键字数组，通常用于搜索。")])]),e._v(" "),a("li",[a("p",[e._v("repositories：仓库托管地址数组，每个元素要包含type（仓库的类型，如git）、url（仓库的地址）和path（相对于仓库的路径，可选）字段。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("dependencies")]),e._v("：记录项目在"),a("code",[e._v("生产环境所依赖的包")]),e._v("，一个关联数组，由包名称和版本号组成")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("devDependencies")]),e._v("：记录项目在"),a("code",[e._v("开发环境所依赖的包")]),e._v("，一个关联数组，由包名称和版本号组成，一般记录第三方插件或工具包。")])]),e._v(" "),a("li",[a("p",[e._v("main： 当包被require时，指定包的入口js文件，即从这个js文件开始执行。")])]),e._v(" "),a("li",[a("p",[e._v("package.json文件说明：")])]),e._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://docs.npmjs.com/files/package.json",target:"_blank",rel:"noopener noreferrer"}},[e._v("package.json"),a("OutboundLink")],1)])]),e._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://docs.npmjs.com/getting-started/using-a-package.json",target:"_blank",rel:"noopener noreferrer"}},[e._v("Using a package.json"),a("OutboundLink")],1)])])]),e._v(" "),a("p",[e._v("2、包版本号说明\n在npm中安装固定的版本号package，只需要在其后加 "),a("code",[e._v("@版本号")])]),e._v(" "),a("p",[e._v("如：npm install xxx@1.2.2")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("指定版本")]),e._v("：比如1.2.2，遵循“大版本.次要版本.小版本”的格式规定，安装时只安装指定版本。")]),e._v(" "),a("li",[a("code",[e._v("波浪号+指定版本")]),e._v("：比如~1.2.2，表示安装1.2.2以上的最新版本，但是不安装1.3.x的版本，也就是说安装时不改变大版本号和次要版本号。")]),e._v(" "),a("li",[a("code",[e._v("符号^+指定版本")]),e._v("：比如ˆ1.2.2，表示安装1.2.2以上的最新版本，但是不安装2.x.x的版本，也就是说安装时不改变大版本号。")]),e._v(" "),a("li",[a("code",[e._v("latest")]),e._v("：安装最新版本。")])]),e._v(" "),a("h2",{attrs:{id:"npm-全局安装包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm-全局安装包"}},[e._v("#")]),e._v(" NPM 全局安装包")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("npm install 模块 -g")]),e._v(" :全局安装指的是把模块安装成了一个全局命令行工具。")]),e._v(" "),a("li",[e._v("且全局安装的包不可以在代码中通过require() 的方式来加载。"),a("code",[e._v("仅能当作一个全局的命令来使用")])])]),e._v(" "),a("blockquote",[a("p",[e._v("注意：全局安装仅能当全局命令去使用。")])]),e._v(" "),a("ul",[a("li",[e._v("npm uninstall  xxx -g：删除全局模块xxx；")])]),e._v(" "),a("h2",{attrs:{id:"package-lock文件作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#package-lock文件作用"}},[e._v("#")]),e._v(" package.lock文件作用")]),e._v(" "),a("p",[e._v("锁定npm install所安装时的包的版本号，以保证其他人在npm install时,就能确保所有包与你上次安装的完全一样。")]),e._v(" "),a("h2",{attrs:{id:"nrm（npm下载源管理器）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nrm（npm下载源管理器）"}},[e._v("#")]),e._v(" nrm（npm下载源管理器）")]),e._v(" "),a("p",[e._v("nrm 是一个 NPM 源管理器，允许你快速地在如下 NPM 源间切换：")]),e._v(" "),a("p",[e._v("1、安装")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install nrm -g\n")])])]),a("blockquote",[a("p",[e._v("全局安装仅仅是当做一个全局的命令去使用。\n2、使用列出可选的源 "),a("code",[e._v("nrm ls")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("    nrm ls\n  * npm ---- https://registry.npmjs.org/\n  cnpm --- http://r.cnpmjs.org/\n  taobao - https://registry.npm.taobao.org/\n  nj ----- https://registry.nodejitsu.com/\n  npmMirror  https://skimdb.npmjs.com/registry/\n  edunpm - http://registry.enpmjs.org/\n  带 * 的是当前使用的源，上面的输出表明当前源是官方源\n")])])]),a("p",[e._v("3、切换到taobao源")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("nrm use taobao \n")])])]),a("p",[e._v("4、测试\n还可以通过 nrm test 测试相应源的响应时间")]),e._v(" "),a("p",[e._v("测试官方源的响应时间：nrm test npm")]),e._v(" "),a("p",[e._v("测试所有源的响应时间：nrm test")]),e._v(" "),a("h2",{attrs:{id:"安装nodemon工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装nodemon工具"}},[e._v("#")]),e._v(" 安装nodemon工具")]),e._v(" "),a("p",[e._v("每次修改完js文件之后，都要重新启动node服务，这样非常影响开发效率,使用nodemon工具会自动监测项目中的文件变化,一旦发现文件有改动,nodemon 会自动重启node服务")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install nodemon -g\n")])])]),a("p",[e._v("使用的时候，把node改为nodemon即可,如下")]),e._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[e._v("\\Desktop\\nodejs_ study"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("nodemon server3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("js\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);