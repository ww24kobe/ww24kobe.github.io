(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{206:function(v,_,t){"use strict";t.r(_);var n=t(28),s=Object(n.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"抽象思维-程序员第一弹"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#抽象思维-程序员第一弹"}},[v._v("#")]),v._v(" 抽象思维-程序员第一弹")]),v._v(" "),t("p",[v._v("在软件行业，抽象思维的重要性不言而喻。软件开发是一个高度复杂的脑力活动，而程序员经常需要面对五花八门的业务和处理错综复杂的逻辑。如果不具备强大的抽象思维能力，就无法将看似毫无关联的具象凝炼成概念，那么驾驭概念进行思考更是天方夜谭。无法通过抽象思维降低问题的复杂度，思考者们必然会身陷泥潭，无法自拔。而对于其他任何学科，抽象思维都是引领学科发展的基石。同样的在日常生活中，抽象思维充斥于社会的每个角落，推动着人类的不断发展，从而形成了现代社会的总体架构。那么到底什么是抽象思维，我们又该如何刻意地进行抽象思维练习呢？")]),v._v(" "),t("p",[v._v("抽象，简单理解就是提取特征。"),t("strong",[v._v("抽象思维就是正确提取特征的思考方法")]),v._v("。意思很简单，但操作起来特别困难，因为特征太复杂了，可能看的见可能看不见，可能有一个可能数不清，可能是确定的可能是不确定的，可能是真的可能是假的，可能是单一的可能是耦合的。而对于复杂问题，最有效的方法就是分解。这里不得不提出一个概念："),t("strong",[v._v("抽象级别")]),v._v("。")]),v._v(" "),t("p",[v._v("我们对一种事物抽象，往往不是一步达成的，而是分为多个级别进行抽象。举个结构工程师都了解的例子，现在要算一根H型钢的承载力。首先是第一级别的抽象，我们会从各式各样的钢结构厂房或者高层建筑中提取一根柱子模型，简化了约束条件和荷载工况并且保留了截面信息和材料属性进行分析，这就是钢结构设计原理中讲的内容。接着第二层抽象，我们去掉了截面信息，将型钢简化成一根线，通过约束条件和合理的假设，形成数学方程，这是结构稳定理论中讲的内容。然后是第三级别的抽象，求解微分方程，变成了纯数学问题，这是高等数学中讲内容。事实上，所有的经典力学问题都可以抽象为微分方程的求解问题，因为它们的本质都是物体关于空间和时间变化的函数。")]),v._v(" "),t("p",[v._v("通过对问题的分级别抽象建模，一步步剔除掉我们不关心的特征，保留会产生较大影响的特征，将复杂问题进行逐层分解，逐层抽象，最终达到解决问题的目的。这种解决问题的方法也是符合人脑的一种工作模式-人的大脑在处理同一层级的问题上效率是最高的。如果在抽象层级较低的层面上思考时突然跳到级别较高的层面，细节工作很容易出现疏漏；而一旦在高层级中掺插低层级的思考活动，大方向就容易被带偏，并且深陷其中不能自拔。")]),v._v(" "),t("p",[v._v("对于分级别的抽象，方式并不是唯一的，可以自上而下，也可以自下而上，要根据不同的情况分别考虑。在对整个问题有了清晰的宏观思考后，可以自上而下地将问题分解，逐层深入到细节中去。而对于那些根本无法下手的问题，可以试着从下而上的思路，先从细节入手，做到一定程度在逐层向上抽象，最终看到整个问题的本质所在。")]),v._v(" "),t("p",[v._v("虽然抽象级别越高，越接近事物的本质，规律的适用面也越广，但它带来的负面效应也是显而易见的：不容易理解，难以真正利用。不过这是可以解决的难题，原则就是抽象层级不能跳跃。几乎每一个你不能理解的抽象概念都是因为你没有无层级跳跃地去将概念推演一遍。所以抽象级别特别重要。")]),v._v(" "),t("p",[v._v("在我们学习工作和生活中，到处都是看不见的抽象级别。数学中，实数运算是对现实的抽象，代数运算是对实数运算的抽象，抽象代数又是对代数的抽象；国家方针政策是对整个国家运行发展的抽象，国家级政府职能部门对方针政策进行具象，省级政府职能部门对上级指示进行具象，市级县级依序进行…现实就从这样一个混沌的状态，不断输入负熵，通过抽象分级变得有序起来。")]),v._v(" "),t("p",[v._v("然而对于大量从事设计的普通工程师而言，每天面临的工作，确是相当具体的。屋面层次如何构造，剪力墙中钢筋应该如何布置，水电综合如何走线，天花吊顶如何摆放乃至外墙挂板如何裁切等等一系列非常具体的问题，充斥着工程师的日常，很难让他们从中跳出来，进行抽象层面的思考。常此以往，很容易僵化思维，以至无法处理过于复杂的问题，看到事物的本质。")]),v._v(" "),t("p",[v._v("要提升自己的抽象思维能力，刻意的练习是必不可少的。最有效的办法就是写程序，因为编程中抽象思维运用的极为普遍，编程就是把现实问题转化为机器问题，这一过程就必须将问题抽象为概念模型，进而写成代码。然后就是多做定义，对事物进行描述，因为语言本身就是一种低层次的抽象。")]),v._v(" "),t("p",[v._v("对问题进行抽象，只是程序员写程序的第一步，紧接着的就是对问题的"),t("strong",[v._v("解耦")]),v._v("，"),t("strong",[v._v("重构")]),v._v("等等，对思维模式的影响也是巨大的，当然这是第二弹要讨论的问题，敬请关注。\n对问题进行抽象，只是程序员写程序的第一步，紧接着的就是对问题的"),t("strong",[v._v("解耦")]),v._v("，"),t("strong",[v._v("重构")]),v._v("等等，对思维模式的影响也是巨大的，当然这是第二弹要讨论的问题，敬请关注。")]),v._v(" "),t("p",[v._v("原文地址：https://zhuanlan.zhihu.com/p/31349661")])])}),[],!1,null,null,null);_.default=s.exports}}]);